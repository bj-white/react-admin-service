<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.bw.mapper.UserMapper">
	<resultMap id="userMap" type="user">
	 	<id property="id" column="id"/>
	 	<result property="usercode" column="usercode"/>
	 	<result property="username" column="username"/>
	 	<result property="createby" column="createby"/>
	 	<result property="createtime" column="createtime"/>
	 	<result property="updatetime" column="updatetime"/>
	 	<result property="state" column="state"/>
	 	<collection property="roles" ofType="role">
	 		<id property="id" column="rid"/>
	 		<result property="name" column="name"/>
	 	</collection>
	</resultMap>

	<select id="getByPage" parameterType="basequeryvo" resultMap="userMap">
		<!-- select * from user -->
		SELECT u.*, r.id as rid, r.name FROM user u
         LEFT OUTER JOIN user_role ur on u.id = ur.user_id
          LEFT OUTER JOIN role r on ur.role_id = r.id
		<if test="start != null and rows != null">
			limit #{start}, #{rows}
		</if>
	</select>
	
	<select id="getCount" resultType="long">
		select count(*) from user
	</select>
	
	<select id="getById" parameterType="long" resultType="user">
		select `id`, `usercode`, `username`, `createby`, `createtime`, `updatetime`, `state` from user where id = #{id}
	</select>
	
	<insert id="add" parameterType="user" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `user`
			(`usercode`, 
			`username`, 
			`password`, 
			`createby`, 
			`createtime`, 
			`updatetime`, 
			`state`)
		VALUES
			(#{usercode}, 
			#{username}, 
			#{password}, 
			#{createby}, 
			#{createtime}, 
			#{updatetime}, 
			#{state});
	</insert>
	
	<update id="update" parameterType="user">
		UPDATE `user` 
		SET
			`usercode` = #{usercode}, 
			`username` = #{username}, 
			<if test="password != null and password != ''">			
				`password` = #{password}, 
			</if>		
			`updatetime` = #{updatetime}, 
			`state` = #{state}			
		WHERE
			`id` = #{id};
	</update>
	
	<delete id="delete" parameterType="long">
		delete from `user` where `id` = #{id}
	</delete>

</mapper>
